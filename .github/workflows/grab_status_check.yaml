name: Daily Grab Status Checker
on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight UTC daily (adjust to your timezone)
  workflow_dispatch:      # Allows manual triggering from GitHub interface

jobs:
  run-grab-status-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f -y  # Fixes any missing dependencies

      - name: Install Chromedriver
        shell: /usr/bin/bash -e {0}
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.10.16/x64
          PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.10.16/x64/lib/pkgconfig
          Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.10.16/x64
          Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.10.16/x64
          Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.10.16/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.10.16/x64/lib
        run: |
          CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Verify Installation
        run: |
          google-chrome --version
          chromedriver --version
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium pandas openpyxl
          
      - name: Create outlets.csv from secrets
        run: |
          echo '${{ secrets.OUTLETS_CSV_CONTENT }}' > outlets.csv
          
      - name: Run Grab status check
        run: |
          # Modify the script path to point to the chromedriver installed in this workflow
          sed -i 's|"C:/Users/sheng/Desktop/TEST/chromedriver.exe"|"/usr/local/bin/chromedriver"|g' grabstatuschecking.py
          python grabstatuschecking.py
          
      - name: Send email with results
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Grab Outlet Status Report - $(date +%Y-%m-%d)
          body: |
            Daily Grab outlet status report is attached.
            
            This report was automatically generated by GitHub Actions.
          to: ${{ secrets.EMAIL_RECIPIENT }}
          from: GitHub Actions <${{ secrets.EMAIL_SENDER }}>
          attachments: ./outlet_status.xlsx
          
      - name: Upload results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: outlet-status-report
          path: outlet_status.xlsx
          retention-days: 7  # Keep reports for a week