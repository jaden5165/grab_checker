name: Daily Grab Status Checker

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight UTC daily (adjust to your timezone)
  workflow_dispatch:      # Allows manual triggering from GitHub interface

jobs:
  run-grab-status-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to v4 for latest features and security

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f 3 | cut -d '.' -f 1)
          echo "Chrome major version: $CHROME_VERSION"
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
          if echo "$CHROMEDRIVER_VERSION" | grep -q "<Error>"; then
            echo "Chromedriver for Chrome $CHROME_VERSION not available. Falling back to latest release."
            CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
          fi
          echo "Chromedriver version: $CHROMEDRIVER_VERSION"
          wget -q "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Verify Chrome and Chromedriver Installation
        run: |
          google-chrome --version
          chromedriver --version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium pandas openpyxl

      - name: Create outlets.csv from secrets
        run: |
          echo '${{ secrets.OUTLETS_CSV_CONTENT }}' > outlets.csv

      - name: Update Chromedriver path in script
        run: |
          # Check if the script exists and update the Chromedriver path
          if [ -f "grab_claude.py" ]; then
            sed -i 's|"C:/Users/sheng/Desktop/TEST/chromedriver.exe"|"/usr/local/bin/chromedriver"|g' grab_claude.py
          else
            echo "Error: grab_claude.py not found"
            exit 1
          fi

      - name: Run Grab status check
        run: |
          python grab_claude.py

      - name: Send email with results
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Grab Outlet Status Report - $(date +%Y-%m-%d)
          body: |
            Daily Grab outlet status report is attached.

            This report was automatically generated by GitHub Actions.
          to: ${{ secrets.EMAIL_RECIPIENT }}
          from: GitHub Actions <${{ secrets.EMAIL_SENDER }}>
          attachments: ./outlet_status.xlsx

      - name: Upload results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: outlet-status-report
          path: outlet_status.xlsx
          retention-days: 7  # Keep reports for a week